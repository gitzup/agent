// Code generated by go-bindata. DO NOT EDIT. @generated
// sources:
// api/schema/action.json
// api/schema/build.request.json
// api/schema/build.response.json
// api/schema/init.request.json
// api/schema/init.response.json
// api/schema/project.json
// api/schema/resource.json
package internal

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _schemaActionJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x6e\xea\x30\x10\x45\xf7\xf9\x0a\xcb\x0f\x89\x57\xb5\x24\x65\x55\xc9\x1b\x7e\xa0\x52\xab\x6e\x11\x48\xae\x33\x04\x23\xe2\x71\xc7\x43\x25\x8a\xf2\xef\x55\x42\x92\x12\x1c\x44\x56\xc9\xcd\x39\x9e\xeb\x39\x25\x42\x08\x21\x27\xc1\x6c\xa1\xd4\x52\x09\xb9\x65\xf6\x2a\xcb\x76\x01\xdd\xec\x9c\xa6\x48\x45\x96\x93\xde\xf0\xec\xf9\x25\x3b\x67\xff\xe4\x53\x6b\xda\xfc\xc2\x2a\x2c\xff\x1c\x7c\x6a\xb0\xcc\xbe\xe7\x2d\x9a\x69\xc3\x16\x5d\x5a\x9f\xd8\x59\x39\x04\x43\xd6\xd7\x79\x6d\x7f\x40\xc0\x03\x19\x10\x9e\x90\xd1\xe0\x5e\x4c\xcf\xd2\x34\xed\x0c\x3e\x7a\xa8\x51\xfc\xdc\x81\xe1\x2e\xd5\x79\x6e\x6b\x4e\xef\xdf\x09\x3d\x10\x5b\x08\x52\x89\x8d\xde\x07\x68\x11\x82\xaf\x83\x25\xa8\x5b\x2e\x9b\xa4\x49\x6d\xa9\x0b\x90\xcd\xf7\xaa\x05\xfd\xe5\x09\xa7\x6b\xf4\x32\x1a\x14\x0a\x4c\xd6\x15\x6d\xa1\xfe\xaf\xd7\xcc\x40\xcd\xe5\xd6\xcb\xb5\x5a\x3d\xfe\x5f\x28\xd5\xbc\x3c\x2c\x26\xb2\x67\xab\x3f\x4d\x82\x63\x3a\x7a\xb4\x8e\x6f\x0f\xd3\x44\xfa\x78\x3d\xcb\x32\x94\x21\x72\xc6\x4a\x0e\x80\x6a\xb4\x85\x29\xf3\x78\x3c\x3a\x78\xdb\x0c\x16\xd8\x3d\xf1\xcc\xfb\xcb\xe9\xa9\xd2\xba\x57\x70\x05\x6f\xa5\x12\xf3\x08\xa9\x62\xeb\xce\xb4\xb1\xed\xf4\xd0\xed\x2d\xdd\x6a\x3d\x0a\x56\x71\xcf\x41\xb2\x4a\x86\x79\x95\x54\xc9\x6f\x00\x00\x00\xff\xff\xdd\xb3\xa0\x03\x65\x03\x00\x00")

func schemaActionJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaActionJson,
		"schema/action.json",
	)
}

func schemaActionJson() (*asset, error) {
	bytes, err := schemaActionJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema/action.json", size: 869, mode: os.FileMode(436), modTime: time.Unix(1535818230, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemaBuildRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x3f\x6b\xc3\x30\x10\xc5\x77\x7f\x8a\x43\xed\x58\x59\xe9\x54\x9a\x2d\x7b\x87\xcc\x0d\xa6\xc8\xd6\x39\x56\x70\x2c\x55\x77\x2e\x34\xc1\xdf\xbd\xc8\xff\x30\x54\x90\xc5\x58\x4f\xbf\xf7\xb8\xa7\xbb\x67\x00\x00\xe2\x99\xaa\x06\xaf\x5a\xec\x41\x34\xcc\x7e\xaf\xd4\x85\x5c\x27\x27\x35\x77\xe1\xac\x4c\xd0\x35\xcb\xdd\x9b\x9a\xb4\x27\xf1\x32\x3b\xad\xd9\xb8\xce\x96\x6f\xbd\xcf\x2b\x77\x55\x3f\xaf\x33\xaa\xca\xde\xb6\x26\x0f\xf8\xdd\x23\x71\x1e\x83\x17\xb3\x41\xaa\x82\xf5\x6c\x5d\x17\x43\x0e\x30\xa2\xb0\xa0\x0b\xc6\xbf\x1e\xe3\xbd\x2b\x2f\x58\xf1\xa2\x6a\x63\x6c\x74\xea\xf6\x18\x9c\xc7\xc0\x16\x49\xec\xa1\xd6\x2d\xe1\x8c\xc4\x20\x1b\x30\x4e\x78\x1a\x95\x59\x25\xd7\x87\x0a\x49\x8c\x5a\x31\xc3\x7e\x9b\x72\x4f\xe1\x5b\x39\x35\xff\x87\x25\x06\x57\xc3\xea\x00\x76\x50\x22\x68\xef\x5b\x8b\x06\x34\x81\xd7\x61\x44\xb8\xb1\x94\x6e\xbb\x86\x27\x5b\xaf\xb7\x8f\xdb\xaf\xa8\xd7\xcc\x18\xba\x63\xba\xdf\x8a\x9d\xb4\xbc\x15\xf1\x73\x90\x9f\x3b\xf9\xfe\x25\xc7\x43\x91\x84\xa7\xd5\x07\xac\x1f\xed\x7e\x79\x8a\x69\xed\xff\x72\x86\x2c\x7d\x9a\xfe\x86\x6c\xc8\xfe\x02\x00\x00\xff\xff\x4b\xba\x7e\x96\xa1\x02\x00\x00")

func schemaBuildRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaBuildRequestJson,
		"schema/build.request.json",
	)
}

func schemaBuildRequestJson() (*asset, error) {
	bytes, err := schemaBuildRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema/build.request.json", size: 673, mode: os.FileMode(436), modTime: time.Unix(1535818283, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemaBuildResponseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\x41\x4e\x85\x30\x10\xc6\xf1\x3d\xa7\x98\x54\x97\xd2\xea\xca\x84\x9d\x37\x70\x6f\x5c\x94\x76\x80\x21\x40\xeb\x74\x30\x51\xc2\xdd\x5f\xfa\x28\x2f\x6c\xbf\xfc\xfe\x93\xd9\x2a\x00\x00\xf5\x9c\xdc\x80\xb3\x55\x0d\xa8\x41\x24\x36\xc6\x8c\x29\x2c\xf5\xb1\xea\xc0\xbd\xf1\x6c\x3b\xa9\x5f\xdf\xcd\xb1\x3d\xa9\x97\x52\x92\xbf\x54\x3d\xc9\xff\x1a\xb5\x0b\xb3\xf9\x7d\x2b\xd4\xb4\x2b\x4d\x5e\x33\xa6\x18\x96\x84\x3a\x5f\x3e\x6b\x8f\xc9\x31\x45\xa1\xb0\xe4\x2b\x1f\x70\xb7\xf0\xb0\xa7\x93\xbf\x88\x19\x84\x76\x44\x27\xe7\x6a\xbd\xa7\x9c\xda\xe9\x93\x43\x44\x16\xc2\xa4\x1a\xe8\xec\x94\xb0\x10\xc6\x9f\x95\x18\xf3\x8f\x5f\xf0\x5d\xc6\x78\xd5\x1b\xec\xd5\x5e\xdd\x02\x00\x00\xff\xff\x74\x1b\xb7\x1c\x08\x01\x00\x00")

func schemaBuildResponseJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaBuildResponseJson,
		"schema/build.response.json",
	)
}

func schemaBuildResponseJson() (*asset, error) {
	bytes, err := schemaBuildResponseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema/build.response.json", size: 264, mode: os.FileMode(436), modTime: time.Unix(1535818295, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemaInitRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xb1\x6e\xf2\x30\x14\x85\xf7\x3c\x85\xe5\xff\x97\x18\x8a\x13\x98\xaa\x66\xeb\x58\xa9\x43\xd5\xb1\x28\x83\x6b\x5f\x82\x11\xb1\x5d\xfb\x52\xa9\xa0\xbc\x7b\x65\xe2\x98\x04\x82\x18\xba\xe1\x73\x7c\xbe\x7b\x7c\xc9\x31\x23\x84\x10\xfa\xdf\x8b\x0d\x34\x9c\x96\x84\x6e\x10\x6d\x59\x14\x5b\x6f\x34\xeb\xd4\xdc\xb8\xba\x90\x8e\xaf\x91\x2d\x1e\x8b\x4e\xfb\x47\xe7\x31\xa9\xe4\x20\x55\x2b\x3c\xec\x6d\x2e\x4c\x53\x7c\x2f\xe3\xd5\x42\x69\x85\xb9\x83\xaf\x3d\x78\xcc\x03\xb7\xcf\x4a\xf0\xc2\x29\x8b\xca\xe8\xc0\x78\x07\x6f\xf6\x4e\x00\xb1\xce\xa0\x11\x66\x47\x66\x21\x3a\x23\x7d\xb6\xcf\xe1\x8f\x85\x10\x30\x9f\x5b\x10\xd8\xab\x5c\x4a\x15\x50\x7c\xf7\xe6\x8c\x05\x87\x0a\x3c\x2d\xc9\x9a\xef\x3c\xc4\x2b\x01\xa4\x1c\x84\xc6\xab\x93\x92\x54\xf0\xf8\x22\xe9\x3c\x1c\xba\x12\xf4\xe4\x57\x31\x68\x87\xc4\xe3\x54\x74\x28\x8f\x4a\x7a\x74\x4a\xd7\xb1\x64\x72\x1b\xa5\x5f\x41\xd7\xb8\xa1\x25\x59\x26\xab\x9d\x0f\xd1\xb1\xc8\x4d\xf2\xe8\xf9\xc9\xbd\xbf\x86\x51\xfb\xab\x75\x24\x57\xf3\x06\x2e\xe0\xe7\xf1\x23\xb9\xba\xe0\xde\xd8\xd6\x98\x3c\xe5\xdc\x5f\xdc\x79\x06\x47\x04\x77\xfa\x6e\x56\x9c\x1d\xaa\x15\xe3\xec\xf0\xcc\x3e\x16\xec\xa9\x7a\xa0\x57\x99\xf6\xd6\x43\xfe\x58\x63\xfa\x7f\x4c\x53\xb3\xe9\x53\xf7\xab\xcd\xda\xec\x37\x00\x00\xff\xff\x9e\x4e\xad\xa7\x80\x03\x00\x00")

func schemaInitRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaInitRequestJson,
		"schema/init.request.json",
	)
}

func schemaInitRequestJson() (*asset, error) {
	bytes, err := schemaInitRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema/init.request.json", size: 896, mode: os.FileMode(436), modTime: time.Unix(1535818354, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemaInitResponseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xb1\x4e\x03\x31\x0c\x86\xf7\x3e\x45\x14\x90\xba\xb4\x17\x98\x90\x6e\xe3\x0d\x10\x8c\x88\x21\x24\xbe\xab\xab\x6b\x1c\x1c\x1f\x12\x54\x7d\x77\x94\xe4\xae\xbd\x81\x0a\xb1\x64\xf8\xe2\xef\xb7\x65\x1f\x57\x4a\x29\xa5\x6f\x93\xdb\xc1\xc1\xea\x56\xe9\x9d\x48\x6c\x8d\xd9\x27\x0a\xdb\x4a\x1b\xe2\xde\x78\xb6\x9d\x6c\xef\x1e\x4c\x65\x37\x7a\x33\x99\xe8\x17\x56\x8f\xf2\x3d\xc6\xc6\xd1\xc1\x7c\xde\x4f\xa5\x06\x03\x4a\xc3\x90\x22\x85\x04\x4d\x0e\x9e\x65\x0f\xc9\x31\x46\x41\x0a\x39\xe4\x19\x12\x8d\xec\x40\x45\x26\x21\x47\x83\x5a\x67\x77\xad\xce\xf2\x2c\xca\x57\x84\x6c\xd0\xfb\x1e\x9c\xcc\xd4\x7a\x8f\x39\xcb\x0e\x4f\x4c\x11\x58\x10\x92\x6e\x55\x67\x87\x04\x53\x09\xc3\xc7\x88\x0c\x79\xe6\xd7\x42\x0a\x75\x14\x3a\xec\x5f\xea\x0e\x36\x17\x9e\xc4\x0a\x3c\xba\x32\x5f\xa1\x6f\x53\x4c\x5c\xe6\x1f\xaf\x04\x2d\x7f\xea\xae\x18\xba\xff\xac\xf8\x6c\x9f\xae\xcc\xf4\x57\x87\x5f\xcf\x61\x8b\x5b\xef\x70\xe9\xb0\xaa\xef\x69\xf5\x13\x00\x00\xff\xff\xd2\x92\x0b\x74\x12\x02\x00\x00")

func schemaInitResponseJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaInitResponseJson,
		"schema/init.response.json",
	)
}

func schemaInitResponseJson() (*asset, error) {
	bytes, err := schemaInitResponseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema/init.response.json", size: 530, mode: os.FileMode(436), modTime: time.Unix(1535818374, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemaProjectJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x5f\x6f\x9b\x3e\x14\x7d\xef\xa7\xb8\x3f\x7e\x93\xd2\x6e\x21\xa4\x7f\xf6\x2f\x2f\x55\xb7\x4a\x53\xa4\x4e\xca\xc3\x9e\x96\xf1\xe0\xe0\x0b\xb8\x33\x36\xb5\xcd\xb6\xb4\xca\x77\x9f\x0c\x24\x03\x02\x83\x36\xd3\xa4\xbd\x10\xf9\xfa\xdc\x8b\xcf\x3d\xc7\x37\x3c\x1c\x01\x00\x38\xcf\x74\x10\x63\x42\x9c\x19\x38\xb1\x31\xe9\xcc\xf3\x6e\xb5\x14\x6e\x11\x9d\x48\x15\x79\x54\x91\xd0\xb8\xd3\xd7\x5e\x11\xfb\xdf\x19\x97\x99\x8c\x56\xb2\x22\x66\xee\xb3\x74\x12\xc8\xc4\xfb\x76\x5a\x42\xbd\x54\xc9\x5b\x0c\xcc\xc4\x96\xdc\xa6\x51\xd4\x81\x62\xa9\x61\x52\xd8\xf4\x0f\x52\x46\x1c\xe1\x3d\x97\x19\x85\x05\x27\x26\x94\x2a\x81\x32\x11\x14\x6a\x99\xa9\x00\x41\xa7\x18\xb0\x90\x05\xc4\xe6\x4d\xb6\xb5\xcc\x3a\x45\x5b\x44\xae\x2c\x7a\x1b\x25\x94\x32\x0b\x23\x7c\xa1\x64\x8a\xca\x30\xd4\xce\x0c\x42\xc2\x35\x96\x10\x85\x77\x19\x53\x68\x09\x2c\xf3\x48\x1e\x65\xb4\x2c\x91\xaf\x04\x49\xd0\xc9\x97\x7e\x99\x95\x56\xcb\x3d\xd4\xf2\xaa\xeb\x36\x9a\x9f\x62\x84\x4c\xb0\xbb\x0c\xc7\x90\x69\x54\x2e\xd1\x9a\x45\x02\x29\xcc\xaf\x41\x86\x60\x62\xdc\x92\x9e\x54\x0e\x51\x63\xa9\x8d\x62\x22\x6a\xee\x26\x4c\xdc\xa0\x88\x4c\xec\xcc\xe0\x55\x73\x8f\xfc\xd8\xed\x9d\x4f\x1b\x9b\x29\x31\x06\x55\x7e\xba\x25\x71\xef\x7d\xfb\x98\xba\x6f\x5d\xff\xe1\x62\x7c\xf6\x66\x53\x2e\x7d\x67\x97\xb5\x69\x36\x67\x10\xe9\x1a\x59\xca\x74\xca\xc9\x1a\x6c\xfa\x9f\xa3\x7d\x71\x00\xed\x2b\xf7\xb3\x25\x3d\xfa\xe2\xc0\x7f\x96\xf9\xf9\x74\xd3\xce\x98\x93\x15\x72\x3d\x88\x73\x01\x05\xa2\xb5\x0c\x18\x31\x48\xe1\x3b\x33\x31\x98\x98\xe9\x5e\xb6\x35\x2b\xef\x76\xfb\x2d\x5d\x25\x5f\xc3\x9c\xbd\x6c\xba\xa2\xc3\xc6\xcd\x0e\x2d\x7e\x0f\xcb\xa1\xb9\x71\x8e\x97\x6e\xe9\x95\xe7\x5b\xd3\x9c\x5c\x76\xe6\x40\xaf\xb6\x5d\x72\x1d\x77\xbf\xed\xe4\xd2\x69\x2d\xb1\xd9\x8b\xd6\x23\x9b\x56\xa9\x57\x8c\x73\x26\xa2\xab\x20\x90\x99\x30\xbd\x92\xbf\x2b\xe0\x40\x0a\x7c\xd5\xd4\xa0\x63\x99\x71\x0a\x2b\x04\xce\xc4\x57\xa4\x60\xe4\x23\x8d\x5e\x69\x40\xfd\x5c\xda\x5b\xba\x85\x7b\xfd\x17\xed\x96\x4d\x89\xc2\x01\xe7\xb7\x96\x2d\xa0\x10\x4a\x4e\x51\x79\x52\x45\x44\xb0\xfb\x7c\xd8\x0e\xbd\xa6\x07\x1b\xb7\x3a\x93\x8b\xaa\x63\x3b\x59\xfd\x47\xba\xb7\x3c\x4f\x87\x61\x9b\xd4\xd7\x69\x3e\x87\x4a\xfa\x46\xfe\xba\xb4\x35\x19\xed\xfd\x9d\xc0\xc7\x4c\x1b\x2b\xe5\xa8\xda\x9f\x11\x48\x05\xa3\xa2\x71\xa3\x66\x77\x86\x69\xbc\x43\xa1\xc8\x92\x9c\x7e\xf5\x05\xce\xd8\x29\xaa\x3b\xfe\xbe\x9b\xf7\x0b\xb5\xfd\x1b\x75\xd1\x5f\x74\xab\x3e\xbf\x3e\x90\x4b\x75\x40\x9f\x3e\xe9\x1a\x92\x94\xf5\xcf\xdb\x1b\xa6\x8d\x55\xf0\x6a\x31\xd7\x56\x3f\x14\x64\xc5\xd1\xa3\x4c\xdb\x5f\x08\xa5\xfa\x3b\xee\xed\xb3\x65\x71\xae\xe1\xd2\xb4\xf3\xea\xe3\xb3\xc7\x8b\x28\x45\xd6\x5d\x20\x66\x30\xe9\x1e\xee\xf0\xb8\x41\x5d\x7c\xdd\xcc\xcb\x92\x46\x65\x38\x74\x22\xb7\x78\xb8\x94\xef\xe9\xed\x1a\xa8\xff\x1e\xcf\x7f\xa1\x5f\x5d\x57\xe7\xa8\x78\x6e\x8e\x7e\x06\x00\x00\xff\xff\x15\xe5\x64\x16\xdb\x0b\x00\x00")

func schemaProjectJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaProjectJson,
		"schema/project.json",
	)
}

func schemaProjectJson() (*asset, error) {
	bytes, err := schemaProjectJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema/project.json", size: 3035, mode: os.FileMode(436), modTime: time.Unix(1535818310, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemaResourceJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcf\x4e\xf3\x30\x10\xc4\xef\x7d\x8a\x95\xbf\xef\x00\x12\x4d\x40\x1c\x90\x72\x43\xe2\xc8\x01\x21\x6e\x88\x83\x71\x36\xce\x96\xc6\x36\xeb\x35\x02\xaa\xbe\x3b\x72\xf3\xa7\x69\x01\x89\x4b\xa4\xcc\xfe\x76\x33\x93\xd9\x2c\x00\x00\xd4\xff\x68\x5a\xec\xb4\xaa\x40\xb5\x22\xa1\x2a\xcb\x55\xf4\x6e\xd9\xab\x85\x67\x5b\xd6\xac\x1b\x59\x9e\x5f\x95\xbd\xf6\x4f\x9d\x0d\x9b\x54\xcf\xb6\x2c\xc9\x67\x0a\x85\xf1\x5d\xf9\x76\x31\xa0\x25\x63\xf4\x89\x0d\x16\xf9\xe6\xb8\x57\x63\x34\x4c\x41\xc8\xbb\xbc\x7f\x0d\x23\x05\x31\xa0\xa1\x86\x8c\xce\xb3\x62\xe4\xe5\x23\x60\x06\xfd\xf3\x0a\x8d\x8c\xaa\xae\x6b\xca\x98\x5e\xdf\xb1\x0f\xc8\x42\x18\x55\x05\x8d\x5e\x47\x1c\x10\xc6\xd7\x44\x8c\xd9\xe5\xe3\x4e\xd9\x9f\xdb\xbd\x3e\x0d\x5c\x98\x1f\xd8\x1c\x91\x73\xe5\x27\xfb\xf7\xa3\xf9\x4c\x17\xf0\xd0\x52\x04\x8a\xa0\xe1\xc6\x9b\x17\x64\xa0\x4e\x5b\x04\xc6\x06\x19\x9d\x41\x38\x21\x67\xd6\xa9\x26\x67\x41\x5a\x04\xd1\xf6\x74\x4c\x7a\xfc\x61\x15\x85\xc9\xd9\xe3\x69\x47\xee\x16\x9d\x95\x56\x55\x70\x39\x8d\xb6\x7b\x4a\x19\xef\x1a\xb2\x7f\xb7\xde\xf3\x89\xfb\xff\x3e\x65\x88\xe8\x04\xc4\xef\x7c\x4e\x1d\x1d\xc4\xf2\x0e\xf0\x1d\x4d\x9a\xf7\xf5\x2d\xc5\x41\x6f\xd3\xf4\x97\xfe\x84\x13\xee\x33\x2d\xfa\xe7\x76\xf1\x15\x00\x00\xff\xff\x4c\x7d\x79\x29\xad\x02\x00\x00")

func schemaResourceJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemaResourceJson,
		"schema/resource.json",
	)
}

func schemaResourceJson() (*asset, error) {
	bytes, err := schemaResourceJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schema/resource.json", size: 685, mode: os.FileMode(436), modTime: time.Unix(1535818328, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"schema/action.json":         schemaActionJson,
	"schema/build.request.json":  schemaBuildRequestJson,
	"schema/build.response.json": schemaBuildResponseJson,
	"schema/init.request.json":   schemaInitRequestJson,
	"schema/init.response.json":  schemaInitResponseJson,
	"schema/project.json":        schemaProjectJson,
	"schema/resource.json":       schemaResourceJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"schema": &bintree{nil, map[string]*bintree{
		"action.json":         &bintree{schemaActionJson, map[string]*bintree{}},
		"build.request.json":  &bintree{schemaBuildRequestJson, map[string]*bintree{}},
		"build.response.json": &bintree{schemaBuildResponseJson, map[string]*bintree{}},
		"init.request.json":   &bintree{schemaInitRequestJson, map[string]*bintree{}},
		"init.response.json":  &bintree{schemaInitResponseJson, map[string]*bintree{}},
		"project.json":        &bintree{schemaProjectJson, map[string]*bintree{}},
		"resource.json":       &bintree{schemaResourceJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
